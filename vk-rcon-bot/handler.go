package main

import (
	"github.com/SevereCloud/vksdk/v2/events"
	"strings"
)

func handleMessage(obj events.MessageNewObject, userid, peerid int, message string){
	cmd := CommandFromString(message)
	switch cmd.GetName() {
	case "help", "–ø–æ–º–æ—â—å", "–ø–æ–º—Ä–≥–∏—Ç–µ":
		if role := getUserRole(userid); role < ROLE_MODERATOR { //–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ—Ç ROLE_MODERATOR (1)
			sendTo(peerid, "üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å " + getRoleName(ROLE_MODERATOR) + ", –í–∞—à–∞ —Ä–æ–ª—å - " + getRoleName(role))
		} else {
			helpmessage := "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –í–∞—à–µ–π —Ä–æ–ª–∏ (" + getRoleName(role) + ")\n"
			switch role {
			case ROLE_ADMIN:
				helpmessage += "/ban <–Ω–∏–∫> [–ø—Ä–∏—á–∏–Ω–∞] - –∑–∞–±–∞–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞\n"
				fallthrough //+–ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞
			case ROLE_MODERATOR:
				helpmessage += "/kick <–Ω–∏–∫> - –∫–∏–∫–Ω—É—Ç—å –∏–≥—Ä–æ–∫–∞\n"
			}
			sendTo(peerid, helpmessage)
		}
	case "—Ä–æ–ª—å", "role", "–º–æ—è—Ä–æ–ª—å":
		sendTo(peerid, "–í–∞—à–∞ —Ä–æ–ª—å - " + getRoleName(getUserRole(userid)))
	case "ban", "–±–∞–Ω":
		if role := getUserRole(userid); role < ROLE_ADMIN { //–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ—Ç ROLE_ADMIN (3)
			sendTo(peerid, "üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å " + getRoleName(ROLE_ADMIN) + ", –í–∞—à–∞ —Ä–æ–ª—å - " + getRoleName(role))
		} else {
			if !cmd.IssetArg(0) {
				sendTo(peerid, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏–∫ –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º")
			} else {
				reason := "–Ω–µ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞"
				nick := cmd.GetArgs()[0]
				if cmd.IssetArg(1) {
					reason = strings.Join(cmd.GetArgs()[0:], " ")
				}
				if response, err := SendRCONCommand("ban " + nick + " " + reason); err != nil {
					sendTo(peerid, "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: " + err.Error())
				} else {
					sendTo(peerid, "–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª: " + response)
				}

			}

		}
	case "kick", "–∫–∏–∫":
		if role := getUserRole(userid); role < ROLE_MODERATOR { //–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ—Ç ROLE_MODERATOR (2)
			sendTo(peerid, "üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å " + getRoleName(ROLE_MODERATOR) + ", –í–∞—à–∞ —Ä–æ–ª—å - " + getRoleName(role))
		} else {
			if !cmd.IssetArg(0) {
				sendTo(peerid, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏–∫ –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º")
			} else {
				nick := cmd.GetArgs()[0]
				if response, err := SendRCONCommand("kick " + nick); err != nil {
					sendTo(peerid, "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: " + err.Error())
				} else {
					sendTo(peerid, "–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª: " + response)
				}

			}

		}

	}
}
